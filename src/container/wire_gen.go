// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package container

import (
	"github.com/muhammadandikakurniawan/golang-todolistapp/src/config"
	"github.com/muhammadandikakurniawan/golang-todolistapp/src/infrastructure/repository/mysql"
	"github.com/muhammadandikakurniawan/golang-todolistapp/src/pkg/database"
	"github.com/muhammadandikakurniawan/golang-todolistapp/src/usecase/activity"
	"github.com/muhammadandikakurniawan/golang-todolistapp/src/usecase/todo"
	"gorm.io/gorm"
)

// Injectors from container.go:

func InitializeContainer() Container {
	appConfig := config.LoadConfig()
	db := NewMysqlClient(appConfig)
	activityRepository := mysql.NewActivityRepository(db)
	activityUsecase := activity.NewActivityUsecase(activityRepository)
	todoRepository := mysql.NewTodoRepository(db)
	todoUsecase := todo.NewTodoUsecase(activityRepository, todoRepository)
	container := NewContainer(appConfig, activityUsecase, todoUsecase)
	return container
}

// container.go:

type Container struct {
	AppConfig       config.AppConfig
	ActivityUsecase activity.ActivityUsecase
	TodoUsecase     todo.TodoUsecase
}

func NewContainer(
	AppConfig config.AppConfig,
	ActivityUsecase activity.ActivityUsecase,
	TodoUsecase todo.TodoUsecase,
) Container {
	return Container{
		AppConfig,
		ActivityUsecase,
		TodoUsecase,
	}
}

func NewMysqlClient(cfg config.AppConfig) *gorm.DB {
	db, err := database.NewMysql(cfg.DatabaseConfig)
	if err != nil {
		panic(err)
	}

	return db
}
